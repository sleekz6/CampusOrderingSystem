@model IEnumerable<CampusOrdering.Models.Order>

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>Index</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.PurchaseDateTime)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.TotalPrice)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.PurchaseDateTime)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.TotalPrice)
            </td>
            <td>
                <a asp-action="Edit" asp-route-id="@item.OrderId">Edit</a> |
                <a asp-action="Details" asp-route-id="@item.OrderId">Details</a> |
                <a asp-action="Delete" asp-route-id="@item.OrderId">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>


                @*


                using Microsoft.AspNetCore.Identity.EntityFrameworkCore;
using Microsoft.AspNetCore.Identity;
using Microsoft.EntityFrameworkCore;
using CampusOrdering.Data;

namespace CampusOrdering.Models

{

    public class OrderingContext : IdentityDbContext<AppUser>
    {
        public DbSet<Restaurant> Restaurants { get; set; }
        public DbSet<MenuItem> MenuItems{ get; set; }
        public DbSet<Receipt> Receipts { get; set; }
        public DbSet<Customer> Customers { get; set; }
        public DbSet<Order> Orders { get; set; }

        //public OrderingContext(DbContextOptions options) : base(options)
        //{

        //}

        public OrderingContext(DbContextOptions<OrderingContext> options) : base(options)
        {
        }
        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            base.OnModelCreating(modelBuilder);
            modelBuilder.Entity<Restaurant>().ToTable("Restaurant");
            modelBuilder.Entity<MenuItem>().ToTable("MenuItem");
            modelBuilder.Entity<Receipt>().ToTable("Receipt");
            modelBuilder.Entity<Customer>().ToTable("Customer");
            modelBuilder.Entity<Order>().ToTable("Order");
        }
    }
}

                *@