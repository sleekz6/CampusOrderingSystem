
@using Newtonsoft.Json
@model IEnumerable<CampusOrdering.Models.Order>

@{
    ViewData["Title"] = "View";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var reversedModel = Model.Reverse();
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Main Menu</title>
    <link rel="stylesheet" href="https://www.w3schools.com/w3css/4/w3.css">
    <style>
        body {
            font-family: Arial, sans-serif;
            background-color: #f0f0f0;
            margin: 0;
            padding: 0;
            height: 100vh; /* Set the body height to 100% of the viewport height */
        }

        .container {
            max-width: 1200px; /* Increased container width */
            margin: 20px auto;
            background-color: #fff;
            padding: 20px;
            border: 1px solid #ccc;
            border-radius: 5px;
            box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
            min-height: 80vh; /* Set the container height to 80% of the viewport height */
        }

        h1 {
            text-align: center; /* Center align the title */
            background-color: rgb(21, 140, 186); /* Primary color */
            color: #fff; /* Text color */
            padding: 10px 0; /* Add padding */
            border-radius: 5px; /* Add border radius */
            margin-bottom: 20px; /* Add margin to separate from content */
        }

        .product {
            margin: 20px; /* Increased margin */
            padding: 20px; /* Increased padding */
            border: 1px solid #ccc;
            border-radius: 5px;
            text-align: center;
            background-color: #fff;
            min-height: 300px; /* Set the minimum height of each product division */
        }

            .product img {
                max-width: 300px; /* Increased maximum width */
                max-height: 300px; /* Increased maximum height */
                width: auto;
                height: auto;
            }

        .slider-container {
            max-width: 800px;
            position: relative;
            overflow: hidden;
            margin: 0 auto; /* Center the slider */
        }

        .slider {
            display: flex;
            transition: transform 0.5s ease;
        }

        .slide {
            width: 800px; /* Set width to match slider container */
            flex-shrink: 0;
            text-align: center; /* Center align slide content */
        }

        .prev,
        .next {
            position: absolute;
            top: 50%;
            transform: translateY(-50%);
            background-color: rgb(21, 140, 186); /* Primary color */
            color: #fff;
            border: none;
            font-size: 20px;
            cursor: pointer;
            z-index: 1;
        }

        .prev {
            left: 10px;
        }

        .next {
            right: 10px;
        }

        .cart-items {
            margin-top: 20px;
        }
    </style>
</head>
<body>
    <div class="container">
        <h1>Past Orders</h1>

        @foreach (var order in reversedModel)
        {
            var count = 1;
            <div class="product">
                <h2>@order.PurchaseDateTime.ToShortDateString()</h2>

                @if (!string.IsNullOrEmpty(order.JSONstring))
                {
                    List<CartItem> cartItems = JsonConvert.DeserializeObject<List<CartItem>>(order.JSONstring);
                    <div class="slider-container">
                        <div class="slider">
                            @foreach (var cartItem in cartItems)
                            {
                                <div class="slide">
                                    <div>
                                        <img src="@cartItem.ImageURL">

                                        <h3><b>@(count++). @cartItem.MenuItemName - Price: @cartItem.Price, Quantity: @cartItem.Quantity</b></h3>
                                    </div>
                                </div>
                            }
                            @if (count > 0)
                            {
                                count = 1;
                            }
                        </div>
                        <button class="prev" onclick="plusDivs(this, -1)">&#10094;</button>
                        <button class="next" onclick="plusDivs(this, 1)">&#10095;</button>
                        <div class="cart-items">
                            @foreach (var cartItem in cartItems)
                            {

                                <div><h5>@(count++). @cartItem.MenuItemName - Price: @cartItem.Price, Quantity: @cartItem.Quantity</h5></div>
                            }
                            <h4><b>Total: @order.TotalPrice</b></h4>
                            
                            <form method="post" asp-controller="Cart" asp-action="AddToCartList">
                                <input type="hidden" name="Json" value="@order.JSONstring" />
                                <button type="submit" class="btn btn-outline-primary">Add To Cart</button>
                            </form>

                        </div>
                    </div>
                }
                else
                {
                    <div>No items in the cart</div>
                }
            </div>
        }
    </div>

    <script>
        function plusDivs(button, n) {
            var slider = button.parentNode.querySelector('.slider');
            var slides = slider.querySelectorAll('.slide');
            var currentSlide = Array.from(slides).findIndex(s => s.style.display !== 'none');
            var newIndex = currentSlide + n;
            if (newIndex < 0) {
                newIndex = slides.length - 1;
            } else if (newIndex >= slides.length
            ) {
                newIndex = 0;
            }
            slides.forEach(slide => slide.style.display = 'none');
            slides[newIndex].style.display = 'block';
        }
    </script>
</body>
</html>
